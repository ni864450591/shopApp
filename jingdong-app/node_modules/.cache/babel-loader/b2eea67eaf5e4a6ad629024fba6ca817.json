{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\jingDong\\jingdong\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\jingDong\\jingdong\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Administrator\\Desktop\\jingDong\\jingdong\\src\\utils\\request.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\jingDong\\jingdong\\src\\utils\\request.js","mtime":1620527976576},{"path":"C:\\Users\\Administrator\\Desktop\\jingDong\\jingdong\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\jingDong\\jingdong\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\jingDong\\jingdong\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7IC8vIOWboOS4uui/memHjOmDveacieS6hmJhc2VVUkzvvIzmiYDku6Xlj6/ku6XliJvlu7rkuIDkuKpheGlvc+WunuS+i++8jOS8oOWFpeS4gOS6m+WFrOWFseWPguaVsCDlnLDlnYDvvIzotoXml7bml7bpl7Qg54S25ZCO5byV55So6L+Z5Liq5a6e5L6LCgp2YXIgaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoewogIC8vIGJhc2VVUkw6ICdodHRwczovL3d3dy5mYXN0bW9jay5zaXRlL21vY2svYWU4ZTkwMzE5NDdhMzAyZmVkNWY5MjQyNTk5NWFhMTkvamQnLAogIGJhc2VVUkw6ICdodHRwOi8vbG9jYWxob3N0OjMwMDAnLAogIHdpdGhDcmVkZW50aWFsczogdHJ1ZSwKICAvLyDlhYHorrjot6jln5/kvKDpgJJDb29raWUKICB0aW1lb3V0OiAxMDAwMAp9KTsgLy8gIOi/meaYr+WwgeijheS4gOS4i+ivt+axguWHveaVsO+8jOi/lOWbnuS4gOS4qnBvcm1pc2Xlr7nosaHvvIzpobrkvr/phY3nva7kuIDkupvlj4LmlbAg5pyA5ZCO6L+U5Zue55qE5pivcmVzcG9uc2Xph4xkYXRhCi8vICDlj5HpgIHmlbDmja7vvIzlj5HpgIHnlKjmiLflkI3lkozlr4bnoIHkuYvnsbvnmoTvvIznhLblkI7kvJrov5Tlm57kuIDkupvmlbDmja4KCmV4cG9ydCB2YXIgcG9zdCA9IGZ1bmN0aW9uIHBvc3QodXJsKSB7CiAgdmFyIGRhdGEgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9OwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBpbnN0YW5jZS5wb3N0KHVybCwgZGF0YSwgewogICAgICAvLyAg5ZCO56uv6ZyA6KaB5o6l5pS26L+Z5LmI5LiA5Liq5Y+C5pWwCiAgICAgIGhlYWRlcnM6IHsKICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgIH0KICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHJlc29sdmUocmVzcG9uc2UuZGF0YSk7CiAgICB9LCBmdW5jdGlvbiAoZXJyKSB7CiAgICAgIHJlamVjdChlcnIpOwogICAgfSk7CiAgfSk7Cn07IC8vICDor7fmsYLmlbDmja7vvIzov5nml7blsLHkuI3pnIDopoHmkLrluKbmlbDmja7vvIzkvYbmmK/opoHmkLrluKblj4LmlbAKCmV4cG9ydCB2YXIgZ2V0ID0gZnVuY3Rpb24gZ2V0KHVybCkgewogIHZhciBwYXJhbXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9OwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBpbnN0YW5jZS5nZXQodXJsLCB7CiAgICAgIHBhcmFtczogcGFyYW1zCiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXNvbHZlKHJlc3BvbnNlLmRhdGEpOwogICAgfSwgZnVuY3Rpb24gKGVycikgewogICAgICByZWplY3QoZXJyKTsKICAgIH0pOwogIH0pOwp9OyAvLyAg5pu05paw5pWw5o2uCgpleHBvcnQgdmFyIHBhdGNoID0gZnVuY3Rpb24gcGF0Y2godXJsKSB7CiAgdmFyIHBhcmFtcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIGluc3RhbmNlLnBhdGNoKHVybCwgcGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXNvbHZlKHJlc3BvbnNlLmRhdGEpOwogICAgfSwgZnVuY3Rpb24gKGVycikgewogICAgICByZWplY3QoZXJyKTsKICAgIH0pOwogIH0pOwp9Ow=="},{"version":3,"sources":["C:/Users/Administrator/Desktop/jingDong/jingdong/src/utils/request.js"],"names":["axios","instance","create","baseURL","withCredentials","timeout","post","url","data","Promise","resolve","reject","headers","then","response","err","get","params","patch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5B;AACAC,EAAAA,OAAO,EAAE,uBAFmB;AAG5BC,EAAAA,eAAe,EAAE,IAHW;AAGL;AACvBC,EAAAA,OAAO,EAAE;AAJmB,CAAb,CAAjB,C,CAMA;AACA;;AACA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,GAAD,EAAoB;AAAA,MAAdC,IAAc,uEAAP,EAAO;AACtC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,IAAAA,QAAQ,CAACK,IAAT,CAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvB;AACAI,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFc,KAAzB,EAKGC,IALH,CAKQ,UAAAC,QAAQ,EAAI;AAClBJ,MAAAA,OAAO,CAACI,QAAQ,CAACN,IAAV,CAAP;AACD,KAPD,EAOG,UAAAO,GAAG,EAAI;AACRJ,MAAAA,MAAM,CAACI,GAAD,CAAN;AACD,KATD;AAUD,GAXM,CAAP;AAYD,CAbM,C,CAcP;;AACA,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACT,GAAD,EAAsB;AAAA,MAAhBU,MAAgB,uEAAP,EAAO;AACvC,SAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,IAAAA,QAAQ,CAACe,GAAT,CAAaT,GAAb,EAAkB;AAAEU,MAAAA,MAAM,EAANA;AAAF,KAAlB,EAA8BJ,IAA9B,CAAmC,UAAAC,QAAQ,EAAI;AAC7CJ,MAAAA,OAAO,CAACI,QAAQ,CAACN,IAAV,CAAP;AACD,KAFD,EAEG,UAAAO,GAAG,EAAI;AACRJ,MAAAA,MAAM,CAACI,GAAD,CAAN;AACD,KAJD;AAKD,GANM,CAAP;AAOD,CARM,C,CAUP;;AACA,OAAO,IAAMG,KAAK,GAAG,SAARA,KAAQ,CAACX,GAAD,EAAsB;AAAA,MAAhBU,MAAgB,uEAAP,EAAO;AACzC,SAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,IAAAA,QAAQ,CAACiB,KAAT,CAAeX,GAAf,EAAoBU,MAApB,EAA4BJ,IAA5B,CAAiC,UAAAC,QAAQ,EAAI;AAC3CJ,MAAAA,OAAO,CAACI,QAAQ,CAACN,IAAV,CAAP;AACD,KAFD,EAEG,UAAAO,GAAG,EAAI;AACRJ,MAAAA,MAAM,CAACI,GAAD,CAAN;AACD,KAJD;AAKD,GANM,CAAP;AAOD,CARM","sourcesContent":["import axios from 'axios'\r\n\r\n// 因为这里都有了baseURL，所以可以创建一个axios实例，传入一些公共参数 地址，超时时间 然后引用这个实例\r\nconst instance = axios.create({\r\n  // baseURL: 'https://www.fastmock.site/mock/ae8e9031947a302fed5f92425995aa19/jd',\r\n  baseURL: 'http://localhost:3000',\r\n  withCredentials: true, // 允许跨域传递Cookie\r\n  timeout: 10000\r\n})\r\n//  这是封装一下请求函数，返回一个pormise对象，顺便配置一些参数 最后返回的是response里data\r\n//  发送数据，发送用户名和密码之类的，然后会返回一些数据\r\nexport const post = (url, data = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    instance.post(url, data, {\r\n      //  后端需要接收这么一个参数\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      resolve(response.data)\r\n    }, err => {\r\n      reject(err)\r\n    })\r\n  })\r\n}\r\n//  请求数据，这时就不需要携带数据，但是要携带参数\r\nexport const get = (url, params = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    instance.get(url, { params }).then(response => {\r\n      resolve(response.data)\r\n    }, err => {\r\n      reject(err)\r\n    })\r\n  })\r\n}\r\n\r\n//  更新数据\r\nexport const patch = (url, params = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    instance.patch(url, params).then(response => {\r\n      resolve(response.data)\r\n    }, err => {\r\n      reject(err)\r\n    })\r\n  })\r\n}\r\n"]}]}